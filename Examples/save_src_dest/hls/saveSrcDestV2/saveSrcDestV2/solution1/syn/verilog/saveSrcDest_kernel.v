// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="saveSrcDest_kernel_saveSrcDest_kernel,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=2.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.305000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=166,HLS_SYN_LUT=406,HLS_VERSION=2023_1}" *)

module saveSrcDest_kernel (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_TVALID,
        dest_TVALID,
        src_out_TREADY,
        dest_out_TREADY,
        src_TDATA,
        src_TREADY,
        dest_TDATA,
        dest_TREADY,
        src_out_TDATA,
        src_out_TVALID,
        dest_out_TDATA,
        dest_out_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   src_TVALID;
input   dest_TVALID;
input   src_out_TREADY;
input   dest_out_TREADY;
input  [31:0] src_TDATA;
output   src_TREADY;
input  [31:0] dest_TDATA;
output   dest_TREADY;
output  [31:0] src_out_TDATA;
output   src_out_TVALID;
output  [31:0] dest_out_TDATA;
output   dest_out_TVALID;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] first_load_reg_325;
reg   [0:0] first_load_reg_325_pp0_iter1_reg;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg   [0:0] first_load_reg_325_pp0_iter2_reg;
wire    regslice_both_src_out_U_apdone_blk;
wire    regslice_both_dest_out_U_apdone_blk;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_subdone;
reg   [7:0] curr;
reg   [6:0] saved_addresses_0_address0;
reg    saved_addresses_0_ce0;
reg    saved_addresses_0_we0;
reg   [31:0] saved_addresses_0_d0;
reg   [6:0] saved_addresses_0_address1;
reg    saved_addresses_0_ce1;
wire   [31:0] saved_addresses_0_q1;
reg   [6:0] saved_addresses_1_address0;
reg    saved_addresses_1_ce0;
reg    saved_addresses_1_we0;
reg   [31:0] saved_addresses_1_d0;
reg   [6:0] saved_addresses_1_address1;
reg    saved_addresses_1_ce1;
wire   [31:0] saved_addresses_1_q1;
reg   [0:0] first;
reg   [7:0] prev;
reg    src_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    dest_TDATA_blk_n;
reg    src_out_TDATA_blk_n;
reg    dest_out_TDATA_blk_n;
wire   [0:0] first_load_load_fu_224_p1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] trunc_ln31_fu_232_p1;
reg   [0:0] trunc_ln31_reg_329;
reg   [0:0] trunc_ln31_reg_329_pp0_iter1_reg;
reg   [6:0] lshr_ln2_reg_335;
reg   [6:0] lshr_ln3_reg_340;
wire   [31:0] p_s_fu_302_p4;
wire   [31:0] p_1_fu_312_p4;
wire   [63:0] zext_ln23_fu_196_p1;
wire   [63:0] zext_ln24_fu_218_p1;
wire   [63:0] zext_ln31_fu_292_p1;
wire   [63:0] zext_ln32_fu_297_p1;
wire   [7:0] grp_fu_172_p2;
wire   [7:0] add_ln34_fu_268_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] trunc_ln23_fu_182_p1;
wire   [6:0] lshr_ln_fu_186_p4;
wire   [7:0] add_ln24_fu_202_p2;
wire   [6:0] lshr_ln1_fu_208_p4;
wire   [7:0] add_ln32_fu_246_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_src_U_apdone_blk;
wire   [31:0] src_TDATA_int_regslice;
wire    src_TVALID_int_regslice;
reg    src_TREADY_int_regslice;
wire    regslice_both_src_U_ack_in;
wire    regslice_both_dest_U_apdone_blk;
wire   [31:0] dest_TDATA_int_regslice;
wire    dest_TVALID_int_regslice;
reg    dest_TREADY_int_regslice;
wire    regslice_both_dest_U_ack_in;
reg   [31:0] src_out_TDATA_int_regslice;
reg    src_out_TVALID_int_regslice;
wire    src_out_TREADY_int_regslice;
wire    regslice_both_src_out_U_vld_out;
reg   [31:0] dest_out_TDATA_int_regslice;
reg    dest_out_TVALID_int_regslice;
wire    dest_out_TREADY_int_regslice;
wire    regslice_both_dest_out_U_vld_out;
reg    ap_condition_139;
reg    ap_condition_193;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 curr = 8'd0;
#0 first = 1'd1;
#0 prev = 8'd0;
end

saveSrcDest_kernel_saved_addresses_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
saved_addresses_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(saved_addresses_0_address0),
    .ce0(saved_addresses_0_ce0),
    .we0(saved_addresses_0_we0),
    .d0(saved_addresses_0_d0),
    .address1(saved_addresses_0_address1),
    .ce1(saved_addresses_0_ce1),
    .q1(saved_addresses_0_q1)
);

saveSrcDest_kernel_saved_addresses_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
saved_addresses_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(saved_addresses_1_address0),
    .ce0(saved_addresses_1_ce0),
    .we0(saved_addresses_1_we0),
    .d0(saved_addresses_1_d0),
    .address1(saved_addresses_1_address1),
    .ce1(saved_addresses_1_ce1),
    .q1(saved_addresses_1_q1)
);

saveSrcDest_kernel_mux_2_1_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_2_1_32_1_1_U1(
    .din0(saved_addresses_0_q1),
    .din1(saved_addresses_1_q1),
    .din2(trunc_ln31_reg_329_pp0_iter1_reg),
    .dout(p_s_fu_302_p4)
);

saveSrcDest_kernel_mux_2_1_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_2_1_32_1_1_U2(
    .din0(saved_addresses_1_q1),
    .din1(saved_addresses_0_q1),
    .din2(trunc_ln31_reg_329_pp0_iter1_reg),
    .dout(p_1_fu_312_p4)
);

saveSrcDest_kernel_regslice_both #(
    .DataWidth( 32 ))
regslice_both_src_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TDATA),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_U_ack_in),
    .data_out(src_TDATA_int_regslice),
    .vld_out(src_TVALID_int_regslice),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_U_apdone_blk)
);

saveSrcDest_kernel_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dest_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dest_TDATA),
    .vld_in(dest_TVALID),
    .ack_in(regslice_both_dest_U_ack_in),
    .data_out(dest_TDATA_int_regslice),
    .vld_out(dest_TVALID_int_regslice),
    .ack_out(dest_TREADY_int_regslice),
    .apdone_blk(regslice_both_dest_U_apdone_blk)
);

saveSrcDest_kernel_regslice_both #(
    .DataWidth( 32 ))
regslice_both_src_out_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_out_TDATA_int_regslice),
    .vld_in(src_out_TVALID_int_regslice),
    .ack_in(src_out_TREADY_int_regslice),
    .data_out(src_out_TDATA),
    .vld_out(regslice_both_src_out_U_vld_out),
    .ack_out(src_out_TREADY),
    .apdone_blk(regslice_both_src_out_U_apdone_blk)
);

saveSrcDest_kernel_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dest_out_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dest_out_TDATA_int_regslice),
    .vld_in(dest_out_TVALID_int_regslice),
    .ack_in(dest_out_TREADY_int_regslice),
    .data_out(dest_out_TDATA),
    .vld_out(regslice_both_dest_out_U_vld_out),
    .ack_out(dest_out_TREADY),
    .apdone_blk(regslice_both_dest_out_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_load_load_fu_224_p1 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_load_load_fu_224_p1 == 1'd0)))) begin
        curr <= grp_fu_172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_load_load_fu_224_p1 == 1'd1))) begin
        first <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        first_load_reg_325 <= first;
        first_load_reg_325_pp0_iter1_reg <= first_load_reg_325;
        trunc_ln31_reg_329_pp0_iter1_reg <= trunc_ln31_reg_329;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        first_load_reg_325_pp0_iter2_reg <= first_load_reg_325_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_load_load_fu_224_p1 == 1'd0))) begin
        lshr_ln2_reg_335 <= {{prev[7:1]}};
        lshr_ln3_reg_340 <= {{add_ln32_fu_246_p2[7:1]}};
        trunc_ln31_reg_329 <= trunc_ln31_fu_232_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_load_load_fu_224_p1 == 1'd0))) begin
        prev <= add_ln34_fu_268_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dest_TDATA_blk_n = dest_TVALID_int_regslice;
    end else begin
        dest_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dest_TREADY_int_regslice = 1'b1;
    end else begin
        dest_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (first_load_reg_325_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (first_load_reg_325_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (first_load_reg_325_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (first_load_reg_325_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        dest_out_TDATA_blk_n = dest_out_TREADY_int_regslice;
    end else begin
        dest_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((first_load_reg_325_pp0_iter1_reg == 1'd1)) begin
            dest_out_TDATA_int_regslice = 32'd0;
        end else if ((first_load_reg_325_pp0_iter1_reg == 1'd0)) begin
            dest_out_TDATA_int_regslice = p_1_fu_312_p4;
        end else begin
            dest_out_TDATA_int_regslice = 'bx;
        end
    end else begin
        dest_out_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (first_load_reg_325_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (first_load_reg_325_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        dest_out_TVALID_int_regslice = 1'b1;
    end else begin
        dest_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_139)) begin
        if ((trunc_ln23_fu_182_p1 == 1'd1)) begin
            saved_addresses_0_address0 = zext_ln24_fu_218_p1;
        end else if ((trunc_ln23_fu_182_p1 == 1'd0)) begin
            saved_addresses_0_address0 = zext_ln23_fu_196_p1;
        end else begin
            saved_addresses_0_address0 = 'bx;
        end
    end else begin
        saved_addresses_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_193)) begin
        if ((trunc_ln31_reg_329 == 1'd1)) begin
            saved_addresses_0_address1 = zext_ln32_fu_297_p1;
        end else if ((trunc_ln31_reg_329 == 1'd0)) begin
            saved_addresses_0_address1 = zext_ln31_fu_292_p1;
        end else begin
            saved_addresses_0_address1 = 'bx;
        end
    end else begin
        saved_addresses_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (trunc_ln23_fu_182_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (trunc_ln23_fu_182_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        saved_addresses_0_ce0 = 1'b1;
    end else begin
        saved_addresses_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (first_load_reg_325 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln31_reg_329 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (first_load_reg_325 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln31_reg_329 == 1'd0)))) begin
        saved_addresses_0_ce1 = 1'b1;
    end else begin
        saved_addresses_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_139)) begin
        if ((trunc_ln23_fu_182_p1 == 1'd1)) begin
            saved_addresses_0_d0 = dest_TDATA_int_regslice;
        end else if ((trunc_ln23_fu_182_p1 == 1'd0)) begin
            saved_addresses_0_d0 = src_TDATA_int_regslice;
        end else begin
            saved_addresses_0_d0 = 'bx;
        end
    end else begin
        saved_addresses_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (trunc_ln23_fu_182_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (trunc_ln23_fu_182_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        saved_addresses_0_we0 = 1'b1;
    end else begin
        saved_addresses_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_139)) begin
        if ((trunc_ln23_fu_182_p1 == 1'd0)) begin
            saved_addresses_1_address0 = zext_ln24_fu_218_p1;
        end else if ((trunc_ln23_fu_182_p1 == 1'd1)) begin
            saved_addresses_1_address0 = zext_ln23_fu_196_p1;
        end else begin
            saved_addresses_1_address0 = 'bx;
        end
    end else begin
        saved_addresses_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_193)) begin
        if ((trunc_ln31_reg_329 == 1'd0)) begin
            saved_addresses_1_address1 = zext_ln32_fu_297_p1;
        end else if ((trunc_ln31_reg_329 == 1'd1)) begin
            saved_addresses_1_address1 = zext_ln31_fu_292_p1;
        end else begin
            saved_addresses_1_address1 = 'bx;
        end
    end else begin
        saved_addresses_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (trunc_ln23_fu_182_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (trunc_ln23_fu_182_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        saved_addresses_1_ce0 = 1'b1;
    end else begin
        saved_addresses_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (first_load_reg_325 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln31_reg_329 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (first_load_reg_325 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln31_reg_329 == 1'd0)))) begin
        saved_addresses_1_ce1 = 1'b1;
    end else begin
        saved_addresses_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_139)) begin
        if ((trunc_ln23_fu_182_p1 == 1'd0)) begin
            saved_addresses_1_d0 = dest_TDATA_int_regslice;
        end else if ((trunc_ln23_fu_182_p1 == 1'd1)) begin
            saved_addresses_1_d0 = src_TDATA_int_regslice;
        end else begin
            saved_addresses_1_d0 = 'bx;
        end
    end else begin
        saved_addresses_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (trunc_ln23_fu_182_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (trunc_ln23_fu_182_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        saved_addresses_1_we0 = 1'b1;
    end else begin
        saved_addresses_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src_TDATA_blk_n = src_TVALID_int_regslice;
    end else begin
        src_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src_TREADY_int_regslice = 1'b1;
    end else begin
        src_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (first_load_reg_325_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (first_load_reg_325_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (first_load_reg_325_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (first_load_reg_325_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        src_out_TDATA_blk_n = src_out_TREADY_int_regslice;
    end else begin
        src_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((first_load_reg_325_pp0_iter1_reg == 1'd1)) begin
            src_out_TDATA_int_regslice = 32'd0;
        end else if ((first_load_reg_325_pp0_iter1_reg == 1'd0)) begin
            src_out_TDATA_int_regslice = p_s_fu_302_p4;
        end else begin
            src_out_TDATA_int_regslice = 'bx;
        end
    end else begin
        src_out_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (first_load_reg_325_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (first_load_reg_325_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        src_out_TVALID_int_regslice = 1'b1;
    end else begin
        src_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln24_fu_202_p2 = (curr + 8'd1);

assign add_ln32_fu_246_p2 = (prev + 8'd1);

assign add_ln34_fu_268_p2 = (prev + 8'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_dest_out_U_apdone_blk == 1'b1) | (regslice_both_src_out_U_apdone_blk == 1'b1) | ((first_load_reg_325_pp0_iter2_reg == 1'd1) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd1) & (src_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd0) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd0) & (src_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((first_load_reg_325_pp0_iter1_reg == 1'd1) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd1) & (src_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd0) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd0) & (src_out_TREADY_int_regslice == 1'b0)))) | ((ap_start == 1'b1) & ((dest_TVALID_int_regslice == 1'b0) | (src_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_dest_out_U_apdone_blk == 1'b1) | (regslice_both_src_out_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((first_load_reg_325_pp0_iter2_reg == 1'd1) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd1) & (src_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd0) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd0) & (src_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((first_load_reg_325_pp0_iter1_reg == 1'd1) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd1) & (src_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd0) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd0) & (src_out_TREADY_int_regslice == 1'b0)))) | ((ap_start == 1'b1) & ((dest_TVALID_int_regslice == 1'b0) | (src_TVALID_int_regslice == 
    1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_dest_out_U_apdone_blk == 1'b1) | (regslice_both_src_out_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((first_load_reg_325_pp0_iter2_reg == 1'd1) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd1) & (src_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd0) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd0) & (src_out_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((first_load_reg_325_pp0_iter1_reg == 1'd1) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd1) & (src_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd0) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd0) & (src_out_TREADY_int_regslice == 1'b0)))) | ((ap_start == 1'b1) & ((dest_TVALID_int_regslice == 1'b0) | (src_TVALID_int_regslice == 
    1'b0))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((dest_TVALID_int_regslice == 1'b0) | (src_TVALID_int_regslice == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((first_load_reg_325_pp0_iter1_reg == 1'd1) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd1) & (src_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd0) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd0) & (src_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((first_load_reg_325_pp0_iter1_reg == 1'd1) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd1) & (src_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd0) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter1_reg == 1'd0) & (src_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state4_io = (((first_load_reg_325_pp0_iter2_reg == 1'd1) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd1) & (src_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd0) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd0) & (src_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((regslice_both_dest_out_U_apdone_blk == 1'b1) | (regslice_both_src_out_U_apdone_blk == 1'b1) | ((first_load_reg_325_pp0_iter2_reg == 1'd1) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd1) & (src_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd0) & (dest_out_TREADY_int_regslice == 1'b0)) | ((first_load_reg_325_pp0_iter2_reg == 1'd0) & (src_out_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_139 = ((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_193 = ((1'b0 == ap_block_pp0_stage0) & (first_load_reg_325 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign dest_TREADY = regslice_both_dest_U_ack_in;

assign dest_out_TVALID = regslice_both_dest_out_U_vld_out;

assign first_load_load_fu_224_p1 = first;

assign grp_fu_172_p2 = (curr + 8'd2);

assign lshr_ln1_fu_208_p4 = {{add_ln24_fu_202_p2[7:1]}};

assign lshr_ln_fu_186_p4 = {{curr[7:1]}};

assign src_TREADY = regslice_both_src_U_ack_in;

assign src_out_TVALID = regslice_both_src_out_U_vld_out;

assign trunc_ln23_fu_182_p1 = curr[0:0];

assign trunc_ln31_fu_232_p1 = prev[0:0];

assign zext_ln23_fu_196_p1 = lshr_ln_fu_186_p4;

assign zext_ln24_fu_218_p1 = lshr_ln1_fu_208_p4;

assign zext_ln31_fu_292_p1 = lshr_ln2_reg_335;

assign zext_ln32_fu_297_p1 = lshr_ln3_reg_340;

endmodule //saveSrcDest_kernel
